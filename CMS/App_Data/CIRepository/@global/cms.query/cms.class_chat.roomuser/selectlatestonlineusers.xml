<?xml version="1.0" encoding="utf-8"?>
<cms.query>
  <ClassID>
    <CodeName>Chat.RoomUser</CodeName>
    <GUID>3934275a-9e59-4d72-84c2-7206eeeee3dd</GUID>
    <ObjectType>cms.class</ObjectType>
  </ClassID>
  <QueryConnectionString>CMSConnectionString</QueryConnectionString>
  <QueryGUID>c84ea46e-ab15-4789-9eab-95590644cd0d</QueryGUID>
  <QueryIsCustom>False</QueryIsCustom>
  <QueryIsLocked>False</QueryIsLocked>
  <QueryName>selectlatestonlineusers</QueryName>
  <QueryRequiresTransaction>False</QueryRequiresTransaction>
  <QueryText>
<![CDATA[
--DECLARE @ChangedSince DateTime = '2012-01-01 14:37:39.649'
--DECLARE @RoomID Int = 690

SELECT [CRU_OUTER].[ChatRoomUserAdminLevel], [CU].[ChatUserID], [CU].[ChatUserUserID], [CU].[ChatUserNickname], [CU].[ChatUserLastModification], 
	(CASE
		WHEN [CRU_OUTER].[ChatRoomUserJoinTime] IS NULL THEN 0
		ELSE 1
	END) AS [IsOnline],
    (CASE 
        WHEN [CRU_OUTER].[ChatRoomUserLastModification] > [CU].[ChatUserLastModification] THEN [CRU_OUTER].[ChatRoomUserLastModification]
        ELSE [CU].[ChatUserLastModification]
     END) AS [LastChange], 
    (CASE 
        WHEN [CRU_OUTER].[ChatRoomUserJoinTime] IS NOT NULL THEN 0 -- User is online -> NOT REMOVE
        WHEN [CRU_OUTER].[ChatRoomUserAdminLevel] < [CRU_OUTER].[raisedPrivilegiesValue] THEN 1 -- User's privilegies are not considered as raised -> REMOVE
        WHEN [CU].[ChatUserUserID] IS NOT NULL THEN 0 -- User is non anonymous -> NOT REMOVE
        WHEN EXISTS(
            SELECT [COU].ChatOnlineUserID
            FROM [Chat_OnlineUser] AS [COU]
            WHERE ([COU].[ChatOnlineUserChatUserID] = [CRU_OUTER].[ChatRoomUserChatUserID]) AND ([COU].[ChatOnlineUserJoinTime] IS NOT NULL)
            ) THEN 0 -- User is online in a chat -> NOT REMOVE
        ELSE 1 -- Else -> REMOVE
     END) AS [IsRemoved]
FROM (
    SELECT [CRU].*, 
        (CASE 
            WHEN [CR].[ChatRoomPrivate] = 1 THEN 1
            ELSE 2
         END) AS [raisedPrivilegiesValue] -- Value of admin level considered as raised privilegies in this room (Join in private and Admin in public rooms)
    FROM [Chat_RoomUser] AS [CRU]
    INNER JOIN [Chat_Room] AS [CR] ON [CR].[ChatRoomID] = [CRU].[ChatRoomUserRoomID]
    ) AS [CRU_OUTER]
INNER JOIN [Chat_User] AS [CU] ON [CU].[ChatUserID] = [CRU_OUTER].[ChatRoomUserChatUserID]
WHERE ([CRU_OUTER].[ChatRoomUserRoomID] = @RoomID) AND -- Filter only to specified room
(([CRU_OUTER].[ChatRoomUserLastModification] > @ChangedSince) OR ([CU].[ChatUserLastModification] > @ChangedSince)) -- Filter to changed rows only



--DECLARE @RoomID INT
--SET @RoomID = 223
--DECLARE @ChangedSince DATETIME
--SET @ChangedSince = dateadd(d,-1,GETDATE())

--SELECT
--  CU.*,
--  CRU.*,
--  CASE 
--	WHEN CRU.ChatRoomUserLastModification > CU.ChatUserLastModification THEN CRU.ChatRoomUserLastModification
--	ELSE CU.ChatUserLastModification
--  END AS LastChange
--FROM Chat_RoomUser AS CRU
--LEFT JOIN Chat_User AS CU ON CRU.ChatRoomUserChatUserID = CU.ChatUserID
--WHERE CRU.ChatRoomUserRoomID = @RoomID
--AND (@ChangedSince IS NULL 
--     OR CRU.ChatRoomUserLastModification > @ChangedSince
--     OR CU.ChatUserLastModification > @ChangedSince
--     )
--ORDER BY LastChange
]]>
  </QueryText>
  <QueryTypeID>0</QueryTypeID>
</cms.query>