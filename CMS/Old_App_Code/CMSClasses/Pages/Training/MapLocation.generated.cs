//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.Training;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(MapLocation.CLASS_NAME, typeof(MapLocation))]

namespace CMS.DocumentEngine.Types.Training
{
	/// <summary>
	/// Represents a content item of type MapLocation.
	/// </summary>
	public partial class MapLocation : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Training.MapLocation";


		/// <summary>
		/// The instance of the class that provides extended API for working with MapLocation fields.
		/// </summary>
		private readonly MapLocationFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// MapLocationID.
		/// </summary>
		[DatabaseIDField]
		public int MapLocationID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("MapLocationID"), 0);
			}
			set
			{
				SetValue("MapLocationID", value);
			}
		}


		/// <summary>
		/// Street.
		/// </summary>
		[DatabaseField]
		public string MapLocationStreet
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MapLocationStreet"), @"");
			}
			set
			{
				SetValue("MapLocationStreet", value);
			}
		}


		/// <summary>
		/// City.
		/// </summary>
		[DatabaseField]
		public string MapLocationCity
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MapLocationCity"), @"");
			}
			set
			{
				SetValue("MapLocationCity", value);
			}
		}


		/// <summary>
		/// Country.
		/// </summary>
		[DatabaseField]
		public string MapLocationCountry
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MapLocationCountry"), @"");
			}
			set
			{
				SetValue("MapLocationCountry", value);
			}
		}


		/// <summary>
		/// Tooltip text.
		/// </summary>
		[DatabaseField]
		public string MapLocationTooltipText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("MapLocationTooltipText"), @"");
			}
			set
			{
				SetValue("MapLocationTooltipText", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with MapLocation fields.
		/// </summary>
		[RegisterProperty]
		public MapLocationFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with MapLocation fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class MapLocationFields : AbstractHierarchicalObject<MapLocationFields>
		{
			/// <summary>
			/// The content item of type MapLocation that is a target of the extended API.
			/// </summary>
			private readonly MapLocation mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="MapLocationFields" /> class with the specified content item of type MapLocation.
			/// </summary>
			/// <param name="instance">The content item of type MapLocation that is a target of the extended API.</param>
			public MapLocationFields(MapLocation instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// MapLocationID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.MapLocationID;
				}
				set
				{
					mInstance.MapLocationID = value;
				}
			}


			/// <summary>
			/// Street.
			/// </summary>
			public string Street
			{
				get
				{
					return mInstance.MapLocationStreet;
				}
				set
				{
					mInstance.MapLocationStreet = value;
				}
			}


			/// <summary>
			/// City.
			/// </summary>
			public string City
			{
				get
				{
					return mInstance.MapLocationCity;
				}
				set
				{
					mInstance.MapLocationCity = value;
				}
			}


			/// <summary>
			/// Country.
			/// </summary>
			public string Country
			{
				get
				{
					return mInstance.MapLocationCountry;
				}
				set
				{
					mInstance.MapLocationCountry = value;
				}
			}


			/// <summary>
			/// Tooltip text.
			/// </summary>
			public string TooltipText
			{
				get
				{
					return mInstance.MapLocationTooltipText;
				}
				set
				{
					mInstance.MapLocationTooltipText = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="MapLocation" /> class.
		/// </summary>
		public MapLocation() : base(CLASS_NAME)
		{
			mFields = new MapLocationFields(this);
		}

		#endregion
	}
}